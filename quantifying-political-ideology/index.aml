---
title: Quantifying Political Ideology
subtitle: Understanding DW-Nominate's Spatial Model
author: Matthew Conlen
authorLink: https://mathisonian.com
targets:
    - scroller
data:
   members: members-clean-116.json
   rollcalls: rollcalls-small-116.csv
   membervotes: member-votes-clean-116.json
---


American politics are defined by a two party system. We often think of these two groups—the Democrats and the Republicans—as monoliths, two factions that each vote as a bloc to further their respective agenda. And while this is true to some extent, in reality there is at least a little bit more nuance. We know that some politicians, like Bernie Sanders on the left or Tom Cotton on the right are trying to push their party away from the center by enacting policies that differ, sometimes radically, from the status quo.

The goal of this article is for a reader to understand the quantitative that political scientists developed in order to quantify the political leanings of elected officials. In particular we'll dig into _spatial_ models which should be intuitive to anyone who understood the references to _left_, _right_, and _center_ of the previous paragraph.

This article focuses on the (DW-)NOMINATE method from Poole and Rosenthal [Cite
  authors:"Keith Poole and Howard Rosenthal"
  title:"A spatial model for legislative roll call analysis"
  id:"poole1985spatial"
  venue: "American Journal of Political Science"
  date:"1985"
/], an algorithm which is used to derive _ideological scores_ that describe members of congress, senators, and presidents. This is by no means the only example in this family of models (for example Martin-Quinn scores similarly quantify leanings of supreme court judges [Cite
  authors:"Andrew Martin and Kevin Quinn"
  title:"Dynamic ideal point estimation via Markov chain Monte Carlo for the US Supreme Court, 1953-1999"
  id:"martin2002dynamic"
  venue: "Cambridge University Press"
  date:"2002"
/]), but it is widely used by political scientists.

## Spatial Models

The premise of a spatial model is simple: politicians are put at a particular position on a graph and we can compare their locations and distances between them using Euclidean geometry—that is, we can quantify how similar two politicians are simply by measuring the distance of the line of the line that connects them.

{scene}
title:
summary: Spatial models position politicians in an ideological coordinate space. Can you tell which are Democrats and which are Republicans?
graphic: DwNominate
parameters:
    highlightParty: false
    dimensions: 0
    showEconomicAxis: false
    showSocialAxis: false
appendix:
    showEconomicAxis:
        set: [false]
    showSocialAxis:
        set: [false]
    highlightParty:
        set: [false, true]
    dimensions:
        range: [0, 2, 1]


Say that we have one circle representing each member in the House of Representatives. Can you guess which circles represent Democratic members and which circles represent Republicans?

{stage}
summary: Here, we use NOMINATE to position members of congress along a horizontal line. Now it's much easier to distinguish the parties.
parameters:
    dimensions: 1

It's a trick question: it's impossible to say because they're positioned randomly on the screen. Is it any easier if we use ideological scores assigned by the NOMINATE method to position them along a horizontal line?

{stage}
summary: A pattern emerges, based solely on voting behavior. The algorithm doesn't know anything about party affiliation.
parameters:
    highlightParty: true

A pattern emerges! The politicians were assigned a position based solely on their prior voting behavior. While the algorithm doesn't understand anything about Democrats or Republicans, two clear groups have formed. Notice that there aren't any politicians directly in the middle, the parties have separated into distinct voting blocs.

Note that, for the politicians most toward the center (the _moderates_), they are closer ideologically to some moderate members of the other party than they are to the most outlying members of their own party.

It turns out that the politicians shown on the left are the Democratic house members and the ones on the right are the Republicans. It could just as easily have placed all of the Republicans on the left and the Democrats on the right, but we process the scores afterward to get the positions to match social convention.

{stage}
summary: NOMINATE is a two-dimensional model. This first dimension is understood to represent a policitian's _economic_ preference.
parameters:
    showEconomicAxis: true

There is no inherent reason that we only need to use one dimension (left-to-right). We are operating in the realm of mathematics and n-dimensional reasoning here, so we might find that a spatial model that uses more dimensions is more effective. The researchers that developed the NOMINATE method found that their system worked best when using two dimensions. Anything more than that just added more complexity without much benefit.

The first dimension is typically understood to represent a politician's _economic_ ideology, although it is important to note that the algorithm itself doesn't ascribe any semantic meaning to these dimensions—this is overlaid by human analysts interpreting these results.


{stage}
summary: The second dimension is a social dimension. Notice the variance within each party.
parameters:
    dimensions: 2
    showSocialAxis: true

Once we add in the second dimension, a richer picture emerges.

There is variance within both parties along both dimensions, although the thing that seems to truly
separate Republicans from Democrats is their placement along the economic axis.

{scene}
title:
summary: Each circle represents a member of the House in the 116th U.S. Congress. The model defines a general ideological space. Not only can politicians be positioned in this space, but so can the bills they vote for!
graphic: VoteExplainer
parameters:
    rollnumber: -1
    showMemberVote: false
    transformCoordinates: false
appendix:
    showMemberVote:
        set: [true]
    rollnumber:
        set: [93, 691, 801, 807, 808]


# The 116th Congress

Each of the circles you've been seeing actually represents a member of the House
of Representatives in the 116th United States Congress.

The spatial model is useful because it defines a general ideological space. Not only
can politicians be positioned in this space, but so can the bills they vote for!

{stage}
summary: A _cutting line_ separates those members that we would expect to vote for the bill from the ones that we expect to vote against.
parameters:
    rollnumber: 801

When a congress member votes on a bill, they are expressing an ideological view: do they prefer a world in which the bill has passed or the status quo. Imagine that each of those two possible outcomes can be placed in our two-dimensional ideological space.

Now, thinking geometrically, there must be a line that separates those politicians who are closer ideologically to the bill passing outcome from the status quo. That line is called a _cutting line_, because it separates those members that we would expect to vote for the bill from the ones that we expect to vote against.

The cutting line seen here is the cutting line for U.S. House Bill 6201 (HR6201), which would provide federal aid for economic impacts from the coronavirus.

{stage}
summary: For example, HR6201 passed the House, leading to increased federal unemployment insurance payments, and more federal money for food aid programs.
parameters:
    rollnumber: 801
    showMemberVote: true

The bill passed 363 to 41, and led to increased federal unemployment insurance payments, and more federal money for food aid programs, among other things.

The graphic shows how each member of the House voted for the bill. Those shown tinted in green voted _yay_, those tinted red voted _nay_, and the ones shaded gray did not vote.

{stage}
summary: U.S. House Joint Resolution 46 would terminate President Trump's declaration of an emergency at the U.S.-Mexican border.  The slope of the cutting line informs how much the bill splits along economic or social lines.
parameters:
    rollnumber: 93
    showMemberVote: false


The cutting line is not perfect—some members vote against what we would have expected. In some cases this could be due to political gamesmanship, but generally it is just a byproduct of the fact that this is a messy, imperfect process.

But as far as votes in the U.S. House of Representatives go, HR6201 was quite popular. Many are more clearly split along party lines.

Take U.S. House Joint Resolution 46 which would terminate President Trump's declaration of an emergency at the U.S.-Mexican border. (The emergency declaration allowed him to bypass Congress and reallocate funds to build a border wall.)

{stage}
summary: The bill ultimately passed the House 245 to 182 and went on to be approved by the Senate.
parameters:
    rollnumber: 93
    showMemberVote: true

The cutting line for this vote has a different angle compared to HR6201. The fact that this cutting line isn't quite as vertical tells us that the social dimension
played a larger role in the voting outcome compared to the coronavirus relief bill. This makes sense intuitively sense the relief bill was primarily economic in nature and the border wall plays on larger social issues.

The bill ultimately passed the House 245 to 182 and went on to be approved by the Senate.


{stage}
summary: This vote, on December 18, 2019, split perfectly along party lines, would have let the House out of session for the remainder of the year. Later that same day the House voted to impeach Donald Trump for the first time.
parameters:
    rollnumber: 691
    showMemberVote: true
controls:
    showMemberVote:
        set: [true, false]
    rollnumber:
        set: [93, 691, 801, 807, 808]


Finally, let's look at one of the perfectly partisan votes that was held in the House. This vote, which took place on December 18, 2019, was simply called "On Motion to Adjourn" and would have let the House out of session for the remainder of the year.

So why was a vote over whether the congress members could start winter holidays so contentious? Later that same day the House voted to impeach Donald Trump for the first time.


{scene}
title:
summary: How do we calculate the spatial coordinates of politicians and legislation?
graphic: OptimizerVis
parameters:
    optimizeState: "initialization"
    rollcallFocus: -1
    rollcalls: [93, 691, 801, 807, 808]
    showVotes: false


To this point we've seen how the spatial model can be used to compare the ideologies of politicians as well as votes, but we haven't discussed how the spatial positions of the politicians are actually determined.


To do so requires analyzing every vote that each member of congress has ever made, and using this data to constrain where the politicians must be located. The actual math used in full version of DW-NOMINATE is quite hairy (See Chapter 3 of [Cite
  authors:"Keith Poole"
  title:"Spatial Models of Parliamentary Voting"
  id:"poole2005spatial"
  venue: "Cambridge University Press"
  date:"2005"
/] for a detailed treatment), so we're going to step through a simplified example based on [i]Ideology and Congress[/i] [Display value:" " /] [Cite authors:"Keith Poole and Howard Rosenthal" title:"Ideology & Congress: A Political Economic History of Roll Call Voting" id:"poole2017ideology" date:"2017" venue:"Routledge" /].

{stage}
summary: Let's walk through an illustrative example along one dimension.
parameters:
    optimizeState: "placeVotes"

In this example, we're going to figure out the positions of the congressmembers along just a single dimension, left-to-right. We start off with them placed randomly, and through an iterative optimization process will find their "true" positions.

{stage}
summary: First the votes and Congress members are placed randomly. An iterative approach is used to improve the positions.
parameters:
    optimizeState: "placeVotes"
    showVotes: true
    rollcallFocus: 93
controls:
    rollcallFocus:
        set: [93, 691, 801, 807, 808]

Once the politicians are placed, we can then also place the votes randomly. Note that since we're doing this in one dimension there will be a _cutting point_ instad of a cutting line, that is, a congress member is expected to vote _yea_ or _nay_ depending on which side of this point they are on.

At this point the locations of both the cutting points and the members of Congress are random and unlikely to be correct.

{stage}
summary: The iteration first occurs with the positions of the politicians, while the locations of the vote cutting points are held constant.
parameters:
    optimizeState: "orderMembers"
controls:
    rollcallFocus:
        set: [93, 691, 801, 807, 808]

The first part of the iterative optimization procedure is to order the members such that they minimize the number of voting errors given the current positions of the vote cutting points.

By _voting error_ I mean a case where we would have expected a congress member to vote _yea_ and they actually voted _nay_ or vice-versa.

{stage}
summary: Then, the locations of the politicians are held constant while the vote positions are optimized.
parameters:
    optimizeState: "orderVotes"
controls:
    rollcallFocus:
        set: [93, 691, 801, 807, 808]

One the members have been sorted, we can keep them fixed in place and do the same procedure for the votes: move the cutting points to minimize the number of errors given the ideological points of the members of Congress.



{stage}
summary: This process is repeated until a stable solution is found.
parameters:
    optimizeState: "iterate"

The previous two steps represent the bulk of the algorithm. Now they just need to be repeated until a stable solution is found. First hold the vote cutting points constant while moving the politicians, and then hold the politicians in place and move the vote cutting points.


{stage}
summary: Eventaully it will converge to an ordering that is representative of the politicians' ideologies.
parameters:
    optimizeState: "results"

Eventually this process will converge to an ordering that minimizes the number of voting errors. While this is a simplified example compared to the full DW-NOMINATE algorithm, this approach of iterative improvement is the core idea.

The full algorithm operates over an arbitrary number of dimensions, and uses a probabilistic approach to ideological preference. Instead of optimizing for the minimum number of voting errors, DW-NOMINATE will optimize for the likelylihood that we would have seen the historic votes given a particular placement of ideal points and cutting lines.


{conclusion}

Spatial models can be useful for understanding both how individual politicians vote as well as how politics has changed over time. In this article we walked through examples showing how to interpret the DW-Nominate algorithm, and sketched how the model was calculated in a single dimension. If you're interested, feel free to dig into the references below to get more details on this kind of model.